services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    healthcheck:
#      test: ["CMD", "bash", "-c", "echo 'ruok' | nc -w 2 zookeeper 2181 | grep imok"]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 10s

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    restart: no

  barista-service:
    build:
      context: .
      dockerfile: barista-service/Dockerfile
    container_name: barista-service
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    restart: no

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    restart: no

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
      order-service:
        condition: service_started
    ports:
      - "8080:8080"
    restart: no